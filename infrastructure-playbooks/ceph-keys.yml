---
# This playbook is used to manage CephX Keys
# You will find examples below on how the module can be used on daily operations
#
# It currently runs on localhost

- hosts: localhost
  gather_facts: false
  vars:
    cluster: ceph
    # container_exec_cmd: "docker exec ceph-nano"
    keys_to_info:
      - client.admin
      - mds.0
    keys_to_delete:
      - client.leseb
      - client.leseb1
      - client.pythonnnn
    keys_to_create:
      - { name: client.cinder, caps: { mon: "allow r", osd: "allow class-read object_prefix rbd_children, allow rwx pool=volumes, allow rwx pool=vms, allow rwx pool=images" } , mode: "0600" }
      - { name: client.glance, caps: { mon: "allow r", osd: "allow class-read object_prefix rbd_children, allow rwx pool=images, allow rwx pool=vms" } , mode: "0600" }
      - { name: client.cinder-backup, caps: { mon: "allow r", osd: "allow class-read object_prefix rbd_children, allow rwx pool=volumes, allow rwx pool=backups" } , mode: "0600" }

  tasks:
    - name: create ceph key(s) module
      ceph_key:
        name: "{{ item.name }}"
        state: present
        caps: "{{ item.caps }}"
        cluster: "{{ cluster }}"
        secret: "{{ item.key | default('') }}"
        containerized: "{{ container_exec_cmd | default(False) }}"
      with_items: "{{ keys_to_create }}"

    - name: update ceph key(s)
      ceph_key:
        name: "{{ item.name }}"
        state: update
        caps: "{{ item.caps }}"
        cluster: "{{ cluster }}"
        containerized: "{{ container_exec_cmd | default(False) }}"
      with_items: "{{ keys_to_create }}"

    - name: delete ceph key(s)
      ceph_key:
        name: "{{ item }}"
        state: absent
        cluster: "{{ cluster }}"
        containerized: "{{ container_exec_cmd | default(False) }}"
      with_items: "{{ keys_to_delete }}"

    - name: info ceph key(s)
      ceph_key:
        name: "{{ item }}"
        state: info
        cluster: "{{ cluster }}"
        containerized: "{{ container_exec_cmd }}"
      register: key_info
      ignore_errors: true
      with_items: "{{ keys_to_info }}"

    - name: list ceph key(s)
      ceph_key:
        state: list
        cluster: "{{ cluster }}"
        containerized: "{{ container_exec_cmd | default(False) }}"
      register: list_keys
      ignore_errors: true

    - name: fetch_initial_keys
      ceph_key:
        state: fetch_initial_keys
        cluster: "{{ cluster }}"
      ignore_errors: true
